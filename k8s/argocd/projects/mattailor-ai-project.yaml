apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: mattailor-ai
  namespace: argocd
  labels:
    app.kubernetes.io/name: mattailor-ai-project
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: "MatTailor AI - Intelligent Material Discovery Platform"
  
  # Source repositories allowed for this project
  sourceRepos:
    - https://github.com/your-org/mattailor-ai
    - https://github.com/your-org/mattailor-ai-config
    - https://charts.helm.sh/stable
    - https://kubernetes-charts.storage.googleapis.com
  
  # Destination clusters and namespaces
  destinations:
    # Development
    - namespace: mattailor-ai-dev
      server: https://kubernetes.default.svc
    # Staging  
    - namespace: mattailor-ai-staging
      server: https://kubernetes.default.svc
    # Production
    - namespace: mattailor-ai-prod
      server: https://kubernetes.default.svc
    # Monitoring namespace
    - namespace: monitoring
      server: https://kubernetes.default.svc
    # External cluster (if using multi-cluster setup)
    - namespace: '*'
      server: https://prod-cluster.mattailor.ai
  
  # RBAC configuration
  roles:
    # Developer role - can sync dev applications
    - name: developer
      description: "MatTailor AI Developers"
      policies:
        - p, proj:mattailor-ai:developer, applications, get, mattailor-ai/mattailor-ai-dev, allow
        - p, proj:mattailor-ai:developer, applications, sync, mattailor-ai/mattailor-ai-dev, allow
        - p, proj:mattailor-ai:developer, applications, override, mattailor-ai/mattailor-ai-dev, allow
        - p, proj:mattailor-ai:developer, applications, action/*, mattailor-ai/mattailor-ai-dev, allow
        - p, proj:mattailor-ai:developer, repositories, get, *, allow
        - p, proj:mattailor-ai:developer, logs, get, mattailor-ai/mattailor-ai-dev, allow
      groups:
        - mattailor-developers
        - your-org:mattailor-team
    
    # DevOps role - can manage staging and production
    - name: devops
      description: "MatTailor AI DevOps Engineers"
      policies:
        - p, proj:mattailor-ai:devops, applications, *, mattailor-ai/*, allow
        - p, proj:mattailor-ai:devops, repositories, *, *, allow
        - p, proj:mattailor-ai:devops, logs, get, mattailor-ai/*, allow
        - p, proj:mattailor-ai:devops, exec, create, mattailor-ai/*, allow
      groups:
        - mattailor-devops
        - your-org:platform-team
    
    # Read-only role for stakeholders
    - name: viewer
      description: "MatTailor AI Stakeholders"
      policies:
        - p, proj:mattailor-ai:viewer, applications, get, mattailor-ai/*, allow
        - p, proj:mattailor-ai:viewer, logs, get, mattailor-ai/*, allow
      groups:
        - mattailor-stakeholders
        - your-org:engineering-managers
  
  # Cluster resource whitelist - what can be deployed
  clusterResourceWhitelist:
    - group: ""
      kind: Namespace
    - group: "rbac.authorization.k8s.io"
      kind: ClusterRole
    - group: "rbac.authorization.k8s.io"
      kind: ClusterRoleBinding
    - group: "apiextensions.k8s.io"
      kind: CustomResourceDefinition
    - group: "admissionregistration.k8s.io"
      kind: MutatingWebhookConfiguration
    - group: "admissionregistration.k8s.io"
      kind: ValidatingWebhookConfiguration
  
  # Namespace resource whitelist - what can be deployed in namespaces
  namespaceResourceWhitelist:
    - group: ""
      kind: ConfigMap
    - group: ""
      kind: Secret
    - group: ""
      kind: Service
    - group: ""
      kind: ServiceAccount
    - group: ""
      kind: PersistentVolumeClaim
    - group: "apps"
      kind: Deployment
    - group: "apps"
      kind: StatefulSet
    - group: "apps"
      kind: DaemonSet
    - group: "apps"
      kind: ReplicaSet
    - group: "batch"
      kind: Job
    - group: "batch"
      kind: CronJob
    - group: "networking.k8s.io"
      kind: Ingress
    - group: "networking.k8s.io"
      kind: NetworkPolicy
    - group: "policy"
      kind: PodDisruptionBudget
    - group: "autoscaling"
      kind: HorizontalPodAutoscaler
    - group: "monitoring.coreos.com"
      kind: ServiceMonitor
    - group: "monitoring.coreos.com"
      kind: PodMonitor
    - group: "cert-manager.io"
      kind: Certificate
    - group: "cert-manager.io"
      kind: Issuer
  
  # Namespace resource blacklist - what cannot be deployed
  namespaceResourceBlacklist:
    - group: ""
      kind: ResourceQuota
    - group: ""
      kind: LimitRange
    - group: "policy"
      kind: PodSecurityPolicy
  
  # Sync windows - when syncing is allowed
  syncWindows:
    # Production maintenance window
    - kind: allow
      schedule: "0 2 * * 0"  # Sundays at 2 AM UTC
      duration: 4h
      applications:
        - mattailor-ai-prod
      manualSync: false
    
    # Staging deployment window (business hours)
    - kind: allow
      schedule: "0 9-17 * * 1-5"  # Business hours, weekdays
      duration: 8h
      applications:
        - mattailor-ai-staging
      manualSync: true
    
    # Development - always allowed
    - kind: allow
      schedule: "* * * * *"
      duration: 24h
      applications:
        - mattailor-ai-dev
      manualSync: true
  
  # Signature keys for signed commits (optional)
  signatureKeys:
    - keyID: "YOUR_GPG_KEY_ID"
  
  # Orphaned resources monitoring
  orphanedResources:
    warn: true
    ignore:
      - group: ""
        kind: Secret
        name: "*-token-*"  # Service account tokens
      - group: ""
        kind: ConfigMap
        name: "kube-root-ca.crt"