apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mattailor-frontend-ingress
  namespace: ${NAMESPACE:-mattailor}
  labels:
    app: mattailor-frontend
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - ${DOMAIN:-mattailor.ai}
    - www.${DOMAIN:-mattailor.ai}
    secretName: mattailor-tls
  rules:
  - host: ${DOMAIN:-mattailor.ai}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mattailor-frontend-service
            port:
              number: 80
  - host: www.${DOMAIN:-mattailor.ai}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mattailor-frontend-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mattailor-frontend-netpol
  namespace: ${NAMESPACE:-mattailor}
spec:
  podSelector:
    matchLabels:
      app: mattailor-frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 80
  egress:
  - {}  # Allow all egress traffic