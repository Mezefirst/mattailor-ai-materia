name: Test Deployment Pipeline

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'k8s/**'

jobs:
  test-docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: mattailor-ai:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker image
      run: |
        docker run --rm -d --name test-container -p 3000:80 mattailor-ai:test
        sleep 10
        
        # Test health endpoint
        if curl -f http://localhost:3000/health; then
          echo "✅ Health check passed"
        else
          echo "❌ Health check failed"
          docker logs test-container
          exit 1
        fi
        
        # Test main page
        if curl -s http://localhost:3000 | grep -q "MatTailor AI"; then
          echo "✅ Main page test passed"
        else
          echo "❌ Main page test failed"
          exit 1
        fi
        
        docker stop test-container

  test-kubernetes-manifests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Install Kustomize
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/
    
    - name: Validate Kubernetes manifests
      run: |
        # Test base manifests
        kustomize build k8s/ > base-output.yaml
        kubectl --dry-run=client apply -f base-output.yaml
        
        # Test staging overlay
        kustomize build k8s/overlays/staging/ > staging-output.yaml
        kubectl --dry-run=client apply -f staging-output.yaml
        
        # Test production overlay
        kustomize build k8s/overlays/production/ > production-output.yaml
        kubectl --dry-run=client apply -f production-output.yaml
        
        echo "✅ All Kubernetes manifests are valid"

  test-deployment-scripts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Test setup script syntax
      run: |
        bash -n scripts/setup-secrets.sh
        echo "✅ setup-secrets.sh syntax is valid"
    
    - name: Test deployment script syntax  
      run: |
        bash -n scripts/test-deployment.sh
        echo "✅ test-deployment.sh syntax is valid"