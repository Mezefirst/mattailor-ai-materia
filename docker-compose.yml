version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - mattailor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Service (Python FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./mattailor.db}
      - MATWEB_API_KEY=${MATWEBAPI_KEY}
      - MATERIALS_PROJECT_API_KEY=${MP_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - backend-data:/app/data
    restart: unless-stopped
    networks:
      - mattailor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - mattailor-network
    command: redis-server --appendonly yes

  # PostgreSQL Database (optional, for production)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-mattailor}
      - POSTGRES_USER=${POSTGRES_USER:-mattailor}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - mattailor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mattailor}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  backend-data:
  redis-data:
  postgres-data:

networks:
  mattailor-network:
    driver: bridge